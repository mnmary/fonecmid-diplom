#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	  
	СформироватьДвиженияПоРегистрамРасчета();
	СформироватьВзаиморасчетыССотрудниками();
	
КонецПроцедуры 

  
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвиженияПоРегистрамРасчета()

	Список = СписокСотрудников.Выгрузить();
	Список.Свернуть("Сотрудник","СуммаПремии");
	
	Движения.BKM_ДополнительныеНачисления.Записывать = Истина;
	Движения.BKM_Удержания.Записывать = Истина;
	
	Для Каждого Сотрудник Из Список  Цикл
		
		// регистр BKM_ДополнительныеНачисления
		Движение = Движения.BKM_ДополнительныеНачисления.Добавить(); 
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ПланыВидовРасчета.BKM_ДополнительныеНачисления.ПремияФиксированная;
		Движение.ПериодРегистрации = Дата;        
		Движение.Сотрудник = Сотрудник.Сотрудник;
		Движение.Результат = Сотрудник.СуммаПремии;
		
		// регистр BKM_Удержания
		Движение = Движения.BKM_Удержания.Добавить(); 
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ПланыВидовРасчета.BKM_Удержания.НДФЛ;
		Движение.ПериодРегистрации = Дата;        
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		Движение.Сотрудник = Сотрудник.Сотрудник;
		Движение.Результат = Сотрудник.СуммаПремии * 13 /100;
		
	КонецЦикла; 

	Движения.BKM_ДополнительныеНачисления.Записать();
	Движения.BKM_Удержания.Записать(); 

КонецПроцедуры


Процедура СформироватьВзаиморасчетыССотрудниками()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	BKM_ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(BKM_ДополнительныеНачисления.Результат, 0) КАК Сумма
		|ПОМЕСТИТЬ ВТ_Результаты
		|ИЗ
		|	РегистрРасчета.BKM_ДополнительныеНачисления КАК BKM_ДополнительныеНачисления
		|ГДЕ
		|	BKM_ДополнительныеНачисления.Регистратор = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	BKM_Удержания.Сотрудник,
		|	-ЕСТЬNULL(BKM_Удержания.Результат, 0)
		|ИЗ
		|	РегистрРасчета.BKM_Удержания КАК BKM_Удержания
		|ГДЕ
		|	BKM_Удержания.Регистратор = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Результаты.Сотрудник КАК Сотрудник,
		|	СУММА(ВТ_Результаты.Сумма) КАК Сумма
		|ИЗ
		|	ВТ_Результаты КАК ВТ_Результаты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Результаты.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	// регистр BKM_ВзаиморасчетыССотрудниками Приход	
	Движения.BKM_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.BKM_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.Сумма;
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли