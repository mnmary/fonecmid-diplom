#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	   	
	ЗарплатнаяВедомость =  Выплаты.Выгрузить();
	ЗарплатнаяВедомость.Свернуть("Сотрудник","Сумма"); 
	
	// регистр BKM_ВзаиморасчетыССотрудниками Приход
	Для Каждого ТекСтрокаВыплаты Из ЗарплатнаяВедомость Цикл
		Движение = Движения.BKM_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Сотрудник = ТекСтрокаВыплаты.Сотрудник;
		Движение.Сумма = ТекСтрокаВыплаты.Сумма;
	КонецЦикла;
	
	Движения.BKM_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Движения.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПРЕДСТАВЛЕНИЕССЫЛКИ(BKM_ВзаиморасчетыССотрудникамиОстатки.Сотрудник) КАК Сотрудник,
			|	BKM_ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток КАК Переплата
			|ИЗ
			|	РегистрНакопления.BKM_ВзаиморасчетыССотрудниками.Остатки(
			|			&Граница,
			|			Сотрудник В
			|				(ВЫБРАТЬ
			|					BKM_ВыплатаЗарплатыВыплаты.Сотрудник КАК Сотрудник
			|				ИЗ
			|					Документ.BKM_ВыплатаЗарплаты.Выплаты КАК BKM_ВыплатаЗарплатыВыплаты
			|				ГДЕ
			|					BKM_ВыплатаЗарплатыВыплаты.Ссылка = &Ссылка)) КАК BKM_ВзаиморасчетыССотрудникамиОстатки
			|ГДЕ
			|	BKM_ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток < 0";
	
		
	Запрос.УстановитьПараметр("Граница", Новый Граница(МоментВремени(), ВидГраницы.Включая) );
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрШаблон("Операция не возможна. По сотруднику %1 сумма к выдаче превышает сумму начисления на %2 руб.", Выборка.Сотрудник, - Выборка.Переплата);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
  Если ОбменДанными.Загрузка Тогда
     Возврат;
 КонецЕсли;
 
 Если ИмеютсяПроведенныеДокументыСозданныеПослеТекущего() Тогда
	 
	 ТекстСообщения = "Нарушается последовательность проведения документов.
	 					|Имеются более поздние проведенные документы ВыплатаЗарплаты.
	 					|Для записи этого документа отмените проведения всех последующих и повторите попытку записи.";
	 ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	 
 КонецЕсли;
 
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


Функция ИмеютсяПроведенныеДокументыСозданныеПослеТекущего()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	BKM_ВыплатаЗарплаты.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.BKM_ВыплатаЗарплаты КАК BKM_ВыплатаЗарплаты
		|ГДЕ
		|	BKM_ВыплатаЗарплаты.Дата >= &ДатаДокумента
		|	И BKM_ВыплатаЗарплаты.Ссылка <> &Ссылка
		|	И BKM_ВыплатаЗарплаты.Проведен";
	
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#КонецЕсли