#Область ПрограммныйИнтерфейс

// Функция проверяет наличие сущиствующего докумета с данными предлагаемые к записи
// Параметры:
// ТекущийОбъект - ДокументОбъект
// Возвращаемое значение:
// 	ДокументСсылка 
// 	Неопределено
Функция НайтиСуществующийДокументРеализацияСДаннымиТекущегоОбъекта(ТекущийОбъект) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугУслуги.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		|ГДЕ
		|	РеализацияТоваровУслугУслуги.Ссылка.Дата >= &ДатаНачалаПериода
		|	И РеализацияТоваровУслугУслуги.Ссылка.Дата <= &ДатаОкончанияПериода
		|	И РеализацияТоваровУслугУслуги.Номенклатура В
		|			(ВЫБРАТЬ
		|				BKM_НоменклатураАбонентскаяПлата.Значение КАК Номенклатура
		|			ИЗ
		|				Константа.BKM_НоменклатураАбонентскаяПлата КАК BKM_НоменклатураАбонентскаяПлата
		|		
		|			ОБЪЕДИНИТЬ ВСЕ
		|		
		|			ВЫБРАТЬ
		|				BKM_НоменклатураРаботыСпециалиста.Значение
		|			ИЗ
		|				Константа.BKM_НоменклатураРаботыСпециалиста КАК BKM_НоменклатураРаботыСпециалиста)
		|	И РеализацияТоваровУслугУслуги.Ссылка.Договор = &Договор
		|	И РеализацияТоваровУслугУслуги.Ссылка <> &Ссылка
		|	И РеализацияТоваровУслугУслуги.Ссылка.Проведен
		|	И РеализацияТоваровУслугУслуги.Ссылка.Договор.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.BKM_АбонентскоеОбслуживание)
		|	И РеализацияТоваровУслугУслуги.Ссылка.Контрагент = &Контрагент
		|	И РеализацияТоваровУслугУслуги.Ссылка.Организация = &Организация";
	
	Запрос.УстановитьПараметр("ДатаНачалаПериода", НачалоМесяца(ТекущийОбъект.Дата));
	Запрос.УстановитьПараметр("ДатаОкончанияПериода", КонецМесяца(ТекущийОбъект.Дата));
	Запрос.УстановитьПараметр("Договор", ТекущийОбъект.Договор); 
	Запрос.УстановитьПараметр("Контрагент", ТекущийОбъект.Контрагент);
    Запрос.УстановитьПараметр("Организация", ТекущийОбъект.Организация);
   	Запрос.УстановитьПараметр("Ссылка", ТекущийОбъект.Ссылка); 
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Ссылка;
		
	Иначе 
		
		Возврат Неопределено;
		
	КонецЕсли;
		
КонецФункции

// Проверка правильности заполнения документа РеализацияТоваровУслуг
// Параметры:
// 	 Объект - ДокументОбъект
// Возвращаемое значение:
// 	Булево
Функция ДокументРеализацииТоваровИУслугЗаполненВерно(Знач Объект) Экспорт
	
	Если  Не ЗначениеЗаполнено(Объект.Договор) Тогда	
		
		ТекстСообщения = "Ошибка. Не указан договор";
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,Объект.Ссылка,"Объект.Договор","Объект.Договор");
		Возврат Ложь;

	КонецЕсли; 
	
	//@skip-check wrong-string-literal-content
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор,"ВидДоговора") <> Перечисления.ВидыДоговоровКонтрагентов.BKM_АбонентскоеОбслуживание Тогда
		
		ТекстСообщения = "Должен быть договор абонентского обслуживания";
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,"Объект.Договор");
		Возврат Ложь;
		
	КонецЕсли;  
		
	// Проверяем действие договора
	ДатаНачалИДатаОкончанияДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Договор,"BKM_ДатаНачалаДействияДоговора,BKM_ДатаОкончанияДействияДоговора");
	Если ДатаНачалИДатаОкончанияДоговора.BKM_ДатаНачалаДействияДоговора > Объект.Дата 
		Или   ДатаНачалИДатаОкончанияДоговора.BKM_ДатаОкончанияДействияДоговора < Объект.Дата Тогда
					
		ТекстСообщения = "Выбранный договор не дейстителен на дату документа.
						|Создание документа реализации товаров и услуг невозможно. ";
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,"Объект.Договор");
		Возврат Ложь;		 
		
	КонецЕсли; 
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти