#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Объект.Период.ДатаНачала = НачалоМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(),-1));
	Объект.Период.ДатаОкончания = КонецМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(),-1));	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
				
	Если ЗначениеЗаполнено(Объект.Период) И (Объект.Период.ДатаНачала <> НачалоМесяца(Объект.Период.ДатаНачала)
		Или Объект.Период.ДатаОкончания <> КонецМесяца(Объект.Период.ДатаОкончания)) Тогда 
		
		Объект.Период.ДатаНачала = НачалоМесяца(Объект.Период.ДатаНачала);
		Объект.Период.ДатаОкончания = КонецМесяца(Объект.Период.ДатаОкончания);
		
		ТекстСообщения = СтрШаблон("Период обработки изменен кратно месяцу с %1 по %2",Объект.Период.ДатаНачала, Объект.Период.ДатаОкончания);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"Объект.Период");		

	КонецЕсли;
	
	Объект.СписокДоговоров.Очистить(); 
	
КонецПроцедуры 



#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Период) Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю("Заполните период создания актов реализации товаров и услуг.
													|Обработка не запущена",,"Объект.Период");
		Возврат;
		
	КонецЕсли; 
	
	// Обпаботка формирует документы только за 1 полный месяц
	Если КонецМесяца(Объект.Период.ДатаНачала) <> КонецМесяца(Объект.Период.ДатаОкончания) Тогда 
		
		ОбщегоНазначенияКлиент.СообщитьПользователю("Период создания актов реализации товаров и услуг должен составлять один полный месяц.
													|Обработка не запущена",,"Объект.Период");
		Возврат;
		
	КонецЕсли;  
	
	
	// Запуск фонового задания на сервере.
	ДлительнаяОперация = СоздатьДокументыНаСервере();
	
	// Подключение обработчика завершения фонового задания.
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.Вставить("ВыводитьСообщения", Истина);
	Оповещение = Новый ОписаниеОповещения("ПолучитьСписокДокументов", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СоздатьДокументыНаСервере()
												
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,"Обработки.BKM_МассовоеСозданиеАктов.СоздатьСписокДокументовРеализацииТоваровИУслуг",
												Объект.Период.ДатаНачала, Объект.Период.ДатаОкончания);
	
КонецФункции 

&НаКлиенте
Процедура ПолучитьСписокДокументов(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Статус = "Ошибка" Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		Возврат;
		
	КонецЕсли;
	
	Если Результат = Неопределено Тогда  // Пользователь отменил задание.
		
		ОбщегоНазначенияКлиент.СообщитьПользователю("Обработка отменена пользователем.
													|Возможно некоторые документы не созданы.
													|Рекомендуется перезапустить обработку и дождаться ее завершения.");
		Возврат;
		
	КонецЕсли;
			
	РезультатОбработки = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	
	Объект.СписокДоговоров.Очистить();
	
	Если РезультатОбработки.ДокументовСоздано = 0 И РезультатОбработки.ДокументовНеСоздано = 0 Тогда
		
		ТекстСообщения = "Для выбранного периода все документы Реализации товаров и услуг по абонентским договорам созданы ранее, или нет действующих договоров";
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
		
	КонецЕсли;
	
	ЗаписатьСписокДокументов(РезультатОбработки.МассивДоговоровИРеализаций);
	
	ТекстСообщения = СтрШаблон("Для указанного периода количество успешно созданных документов - %1.
								|Количество не созданных документов по причине ошибок - %2. ", 	
								РезультатОбработки.ДокументовСоздано,РезультатОбработки.ДокументовНеСоздано);
	ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьСписокДокументов(МассивСписка); 
	
	Для Каждого ЭлементМассива Из МассивСписка Цикл 
		
		СтрокаСписка = Объект.СписокДоговоров.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСписка, ЭлементМассива);
	
	КонецЦикла
	
КонецПроцедуры

#КонецОбласти
